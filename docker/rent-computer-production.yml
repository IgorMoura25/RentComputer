version: "3"

# Os containers que irão subir
services:

  # Filas
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit-rent-computer
    # RabbitMQ necessita de um usuário e senha fora de localhost
    # e não pode ser admin admin
    environment:
      RABBITMQ_DEFAULT_USER: "rentcomputer"
      RABBITMQ_DEFAULT_PASS: "rentcomputer"
    # Expondo as portas tradicionais do rabbit
    ports:
      - "5672:5672"
      - "15672:15672"

  # API de exemplo
  api-identity:
    image: igormoura2501/rent-computer-identity-api:latest
    container_name: rent-computer-identity-api
    build:
      # O contexto do docker-compose (de onde irá partir os comandos)
      context: ../src
      dockerfile: ./services/RC.Identity.API/Dockerfile
    # As portas físicas em que o container: está escutando / está expondo
    # Neste exemplo estamos expondo as portas, mas na realidade é melhor não expor
    # para que não fique acessível pela internet
    ports:
      - "5241:5241"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      # Aqui é a porta da aplicação que está escutando
      # Neste exemplo, escutando http e https
      - ASPNETCORE_URLS=https://+:7241;http://+:5241
      # Variáveis de configuração dos certificados SSL para a API trabalhar com https
      - ASPNETCORE_Kestrel__Certificates__Default__Password=rentcomputer
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/rent-computer-certificate.pfx
    # Recomendado trabalhar com volumes com os certificados
    # para não ter que expor os certificados em algum CI/Projeto
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq

  # Proxy Reverso
  # Neste exemplo, o proxy reverso está na frente da Identity API
  # apenas como forma didática por não ter uma app frontend
  rent-computer-server:
    image: igormoura2501/rent-computer-server:latest
    container_name: rent-computer-server
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api-identity

  # Demais API's
  api-customer:
    image: igormoura2501/rent-computer-customer-api:latest
    container_name: rent-computer-customer-api
    build:
      context: ../src
      dockerfile: ./services/RC.Customer.API/Dockerfile
    ports:
      - "5004:5004"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://*:5004
    depends_on:
      - rabbitmq
      - api-identity  

  api-catalog:
    image: igormoura2501/rent-computer-catalog-api:latest
    container_name: rent-computer-catalog-api
    build:
      context: ../src
      dockerfile: ./services/RC.Catalog.API/Dockerfile
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:6003;http://+:5003
      # Variáveis de configuração dos certificados SSL para a API trabalhar com https
      - ASPNETCORE_Kestrel__Certificates__Default__Password=rentcomputer
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/rent-computer-certificate.pfx
    # Recomendado trabalhar com volumes com os certificados
    # para não ter que expor os certificados em algum CI/Projeto
    volumes:
      - ./certs:/https:ro
    depends_on:
      - api-identity