# A quantidade de processos por core
# Ideal deixar 1 ou auto
worker_processes auto;

# Quantas connections irá trabalhar
# O padrão é 1024
events { worker_connections 1024; }

http {
    # Para trabalhar com transferência de dados
    sendfile on;

    # O endpoint respondendo como servidor na porta indicada
    upstream api-identity {
        server api-identity:5241;
    }

    server {
        listen 80;
        server_name $hostname;

        # Esta configuração é para que requisições 
        # na porta 80 http sejam redirecionadas para https
        # para que ninguém seja obrigado a digitar https no browser
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        # Escutando na porta https
        listen 443 ssl;
        server_name $hostname;

        # Configurando os protocolos de segurança mais atuais
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # O caminho do certificado
        ssl_certificate /etc/nginx/rent-computer-certificate.pem;

        # O caminho da chave do certificado
        ssl_certificate_key /etc/nginx/rent-computer-certificate.key;

        # Podendo configurar outros comportamentos como:
        # location /login
        # Somente o / é a raiz, tudo vai valer pra ela
        location / {
            # Precisa ser o nome dado no upstream
            proxy_pass          http://api-identity;
            proxy_redirect      off;
            proxy_http_version  1.1;
            proxy_set_header    Connection keep-alive;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            # Repassa as informações do cliente para a app .NET
            # A app .NET precisa saber lidar com esses headers de proxy
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    X-Forwarded-Host $server_name;
        }
    }
}